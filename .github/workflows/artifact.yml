name: artifact

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout master branch from github
        uses: actions/checkout@v2

      - name: Step 2 - Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Step 3 - Have Github Actions Build Gradle Project
        run: |
          chmod +x gradlew
          ./gradlew clean build
          mkdir staging && cp build/libs/*.jar staging


      - name: Step 4 - Set up a cache for Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Step 5 - Persist workflow data as artificats
        uses: actions/upload-artifact@v2
        with:
          name: plugin-jar
          path: staging

  update_release_draft:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # (Optional) GitHub Enterprise requires GHE_HOST variable set
      #- name: Set GHE_HOST
      #  run: |
      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: Step 1 - Create a new release
        id: create-release
        uses: release-drafter/release-drafter@v5
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Step 2 - Download artifact
        uses: actions/download-artifact@v2
        with:
          name: plugin-jar


      - name: Step 3 - Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: plugin-jar.zip


      - name: Step 4 - Upload asset to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./plugin-jar.zip
          asset_name: plugin-jar.zip
          asset_content_type: application/zip